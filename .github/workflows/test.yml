name: Tests

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - '**'

jobs:
  tests:
    name: ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [Ubuntu, MacOS, Windows]
        python-version: [3.8]
        include:
        - python-version: 3.6
          os: Ubuntu
        - python-version: 3.9
          os: Ubuntu

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get full Python version
        id: full-python-version
        shell: bash
        run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: pip-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            pip-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-
            pip-${{ runner.os }}-

      - name: Virtualenv cache
        uses: actions/cache@v2
        id: cache-venv
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('poetry.lock') }}

      - name: Update make
        if: startsWith(runner.os, 'macOS')
        run: |
          brew install make
          echo 'export PATH=/usr/local/opt/make/libexec/gnubin:$PATH' >> ~/.bash_profile

      - name: Bootstrap
        shell: bash
        run: |
          # For mac
          [[ -f ~/.bash_profile ]] && source ~/.bash_profile
          python -m ensurepip
          python -m pip install --upgrade pip pre-commit poetry
          make PRECOMMIT=n dev

      - name: Run pytest
        shell: bash
        run: make test
